openapi: 3.0.0
info:
  version: 1.0.0
  title: API back end for We sell Houses.
  description: Websiste backend for We sell houses , where estate agents upload properties to sell for the general public to buy
  contact:
    name: Faizaan chowdhary.
    email: chowdhaf@uni.coventry.ac.uk
  license:
    name: Apache 2.0.
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://round-job-8000.codio-box.uk/api/v1/'
    description: API back end server
tags:
  - name: Users
    description: API endpoints to manage users(estate agents).
  - name: Properties
    description: API endpoints to perform CRUD operation for the Properties (Houses).
  - name: TotalProperty
    description: API endpoints to get total count of properties (house).
paths:
  /users:
    summary: this endpoint represents the users (eatate agents) on the system.
    description: >
      This API endpoint represents an individual user (eatate agents) in the system.
      Each specific user is represented as an 'Id'
    post:
      tags:
        - Users
      description:
        Create a new User account for estate agent.
      requestBody:
        description: All new details required to create an estate agent.
        required: true
        content:
          application/json:
            schema:
              $ref: ./User.json#/definitions/user
      responses:
        '201':
          description: estate agent created
          content:
            application/json:
              schema:
                $ref: ./User.json#/definitions/userUpdated
        '400':
          description: Validation error, incorrect or incomplete details entered.
        '500':
          description: Internal server error, user could not be created, see error message.
    get:
      tags:
        - Users
      description:
        Get a list of all estate agent on the system.
      responses:
        '200':
         description: List of users.
         content:
            application/json:
              schema:
                $ref: ./User.json#/definitions/userUpdated
        '403':
          description: Only admin users can get a list all accounts.
        '500':
          description: Internal server error, user could not be created, see error message.
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: User id  of the estate agent
    get:
      tags:
        - Users
      description:
        Get estate agent by id.
      responses:
        '200':
          description: View of agent record
          content:
            application/json:
              schema:
                $ref: ./User.json#/definitions/userUpdated
        '403':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
        '500':
          description: Internal server error, user could not be created, see error message.                  
    put:
      tags:
        - Users
      description:
        Update user by id.
      requestBody:
        description: Update a visible property of the user or their password.
        required: true
        content:
          application/json:
            schema:
              $ref: ./User.json#/definitions/userUpdate
      responses:
        '200':
          description: Confirmation and link to record.
          content:
            application/json:
              schema:
                $ref: ./User.json#/definitions/userUpdated
        '404':
          description: User Not found
        '403':
          description: Permission denied to update
        '500': 
          description: Internal server error, user could not be updated, see error message.                
    delete:
      tags:
        - Users
      description:
        Delete user by id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./User.json#/definitions/userDeleted
        '403':
          description: Only admin users can delete accounts
        '404':
          description: User Not found
        '500': 
          description: Internal server error, user could not be updated, see error message.  
  /property:
    summary: this endpoint represents all the houses on the system.
    description: >
      This API endpoint represents an house in the system.
      Each specific house is represented as an 'houseid'
    post:
      tags:
        - Properties
      description:
        Create a new property to display with all details.
      requestBody:
        description: All new details required to create a property.
        required: true
        content:
          application/json:
            schema:
              $ref: ./Property.json#/definitions/property
      responses:
        '201':
          description: House created
          content:
            application/json:
              schema:
                $ref: ./Property.json#/definitions/PropertyUpdated 
        '400':
          description: Validation error, incorrect or incomplete details entered.
        '500':
          description: Internal server error, property could not be created, see error message.
    get:
      tags:
        - Properties
      description:
        Get a list of all Houses.
      responses:
        '200':
          description: List of Houses
          content:
            application/json:
              schema:
                $ref: ./Property.json#/definitions/PropertyList
        '500':
          description: Internal server error, see error message.
  /property/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: House id of the property.
    get:
      tags:
        - Properties
      description:
        Get Property by its house-id.
      responses:
        '200':
          description: View of the specific property.
          content:
            application/json:
              schema:
                $ref: ./Property.json#/definitions/property
        '404':
          description: Not found
        '500':
          description: Internal server error, see error message.  
    put:
      tags:
        - Properties
      description:
         Update house by house id.
      requestBody:
        description: Update any property of the house.
        required: true
        content:
          application/json:
            schema:
              $ref: ./Property.json#/definitions/property
      responses:
        '200':
          description: Confirmation and link to the updated property.
          content:
            application/json:
              schema:
                $ref: ./Property.json#/definitions/PropertyUpdated
        '404':
          description: house Not found.
        '403':
          description: Permission denied to update. Only house admin can perfomr update.
        '500': 
          description: Internal server error, see error message. 
    delete:
      tags:
        - Properties
      description:
        Delete property by house id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./Property.json#/definitions/PropertyDeleted
        '401':
          description: Only admin of house can delete the property.
        '404':
          description: Not found.
        '500': 
          description: Internal server error, see error message. 
  /property/TotalProperty:
    summary: this endpoint sends the total number of houses on the system.
    description: > 
      This API endpoint will send the toal number of houses on to the system.
    get:
      tags:
         - TotalProperty
      description:
          get a total count of houses on the system.
      responses:
        '200':
          description: total count of houses.
          content:
           application/json:
             schema:
               $ref: ./Property.json#/definitions/PropertyCount
        '500':
            description: Internal server error, see error message.